// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscale.proto

#include "subscale.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace subscale {
PROTOBUF_CONSTEXPR SubscaleData::SubscaleData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubscaleDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscaleDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscaleDataDefaultTypeInternal() {}
  union {
    SubscaleData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscaleDataDefaultTypeInternal _SubscaleData_default_instance_;
PROTOBUF_CONSTEXPR SubspaceTable::SubspaceTable(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubspaceTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubspaceTableDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubspaceTableDefaultTypeInternal() {}
  union {
    SubspaceTable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubspaceTableDefaultTypeInternal _SubspaceTable_default_instance_;
}  // namespace subscale
static ::_pb::Metadata file_level_metadata_subscale_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_subscale_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_subscale_2eproto = nullptr;

const uint32_t TableStruct_subscale_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscale::SubscaleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::subscale::SubscaleData, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscale::SubspaceTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::subscale::SubspaceTable, _impl_.id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::subscale::SubscaleData)},
  { 7, -1, -1, sizeof(::subscale::SubspaceTable)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::subscale::_SubscaleData_default_instance_._instance,
  &::subscale::_SubspaceTable_default_instance_._instance,
};

const char descriptor_table_protodef_subscale_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016subscale.proto\022\010subscale\"\032\n\014SubscaleDa"
  "ta\022\n\n\002id\030\001 \001(\003\"\033\n\rSubspaceTable\022\n\n\002id\030\001 "
  "\001(\0032S\n\016SubscaleRoutes\022A\n\016RemoteSubscale\022"
  "\026.subscale.SubscaleData\032\027.subscale.Subsp"
  "aceTableb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_subscale_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_subscale_2eproto = {
    false, false, 176, descriptor_table_protodef_subscale_2eproto,
    "subscale.proto",
    &descriptor_table_subscale_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_subscale_2eproto::offsets,
    file_level_metadata_subscale_2eproto, file_level_enum_descriptors_subscale_2eproto,
    file_level_service_descriptors_subscale_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_subscale_2eproto_getter() {
  return &descriptor_table_subscale_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_subscale_2eproto(&descriptor_table_subscale_2eproto);
namespace subscale {

// ===================================================================

class SubscaleData::_Internal {
 public:
};

SubscaleData::SubscaleData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:subscale.SubscaleData)
}
SubscaleData::SubscaleData(const SubscaleData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubscaleData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:subscale.SubscaleData)
}

inline void SubscaleData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SubscaleData::~SubscaleData() {
  // @@protoc_insertion_point(destructor:subscale.SubscaleData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubscaleData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SubscaleData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubscaleData::Clear() {
// @@protoc_insertion_point(message_clear_start:subscale.SubscaleData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscaleData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubscaleData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscale.SubscaleData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscale.SubscaleData)
  return target;
}

size_t SubscaleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscale.SubscaleData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscaleData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubscaleData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscaleData::GetClassData() const { return &_class_data_; }


void SubscaleData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubscaleData*>(&to_msg);
  auto& from = static_cast<const SubscaleData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscale.SubscaleData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubscaleData::CopyFrom(const SubscaleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscale.SubscaleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscaleData::IsInitialized() const {
  return true;
}

void SubscaleData::InternalSwap(SubscaleData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscaleData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscale_2eproto_getter, &descriptor_table_subscale_2eproto_once,
      file_level_metadata_subscale_2eproto[0]);
}

// ===================================================================

class SubspaceTable::_Internal {
 public:
};

SubspaceTable::SubspaceTable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:subscale.SubspaceTable)
}
SubspaceTable::SubspaceTable(const SubspaceTable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubspaceTable* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:subscale.SubspaceTable)
}

inline void SubspaceTable::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SubspaceTable::~SubspaceTable() {
  // @@protoc_insertion_point(destructor:subscale.SubspaceTable)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubspaceTable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SubspaceTable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubspaceTable::Clear() {
// @@protoc_insertion_point(message_clear_start:subscale.SubspaceTable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubspaceTable::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubspaceTable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscale.SubspaceTable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscale.SubspaceTable)
  return target;
}

size_t SubspaceTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscale.SubspaceTable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubspaceTable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubspaceTable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubspaceTable::GetClassData() const { return &_class_data_; }


void SubspaceTable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubspaceTable*>(&to_msg);
  auto& from = static_cast<const SubspaceTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscale.SubspaceTable)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubspaceTable::CopyFrom(const SubspaceTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscale.SubspaceTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubspaceTable::IsInitialized() const {
  return true;
}

void SubspaceTable::InternalSwap(SubspaceTable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubspaceTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscale_2eproto_getter, &descriptor_table_subscale_2eproto_once,
      file_level_metadata_subscale_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace subscale
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::subscale::SubscaleData*
Arena::CreateMaybeMessage< ::subscale::SubscaleData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscale::SubscaleData >(arena);
}
template<> PROTOBUF_NOINLINE ::subscale::SubspaceTable*
Arena::CreateMaybeMessage< ::subscale::SubspaceTable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscale::SubspaceTable >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
